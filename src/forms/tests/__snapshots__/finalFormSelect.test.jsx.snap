// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`React select component Should render correctly 1`] = `
<FormGroup
  bsClass="form-group"
  validationState={null}
>
  <Col
    bsClass="col"
    className="control-label"
    componentClass="label"
    xs={2}
  >
    test select
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={8}
  >
    <StateManager
      className="final-form-select "
      clearable={false}
      closeMenuOnSelect={true}
      defaultInputValue=""
      defaultMenuIsOpen={false}
      defaultValue={null}
      disabled={false}
      hideSelectedOptions={false}
      isClearable={false}
      isMulti={false}
      isSearchable={false}
      label="test select"
      labelKey="label"
      multi={false}
      name="name"
      noOptionsMessage={[Function]}
      onBlur={[MockFunction]}
      onChange={[Function]}
      onFocus={[MockFunction]}
      options={
        Array [
          Object {
            "label": "option 1",
            "value": 1,
          },
          Object {
            "label": "option 2",
            "value": 2,
          },
        ]
      }
      placeholder=""
      searchable={false}
      styles={
        Object {
          "container": [Function],
          "control": [Function],
          "dropdownIndicator": [Function],
          "indicatorSeparator": [Function],
          "input": [Function],
          "menu": [Function],
          "multiValue": [Function],
          "multiValueLabel": [Function],
          "multiValueRemove": [Function],
          "option": [Function],
          "placeholder": [Function],
          "singleValue": [Function],
        }
      }
      value={Array []}
      valueKey="value"
    />
  </Col>
</FormGroup>
`;

exports[`React select component Should render correctly in error state 1`] = `
<FormGroup
  bsClass="form-group"
  validationState="error"
>
  <Col
    bsClass="col"
    className="control-label"
    componentClass="label"
    xs={2}
  >
    test select
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={8}
  >
    <StateManager
      className="final-form-select "
      clearable={false}
      closeMenuOnSelect={true}
      defaultInputValue=""
      defaultMenuIsOpen={false}
      defaultValue={null}
      disabled={false}
      hideSelectedOptions={false}
      isClearable={false}
      isMulti={false}
      isSearchable={false}
      label="test select"
      labelKey="label"
      multi={false}
      name="name"
      noOptionsMessage={[Function]}
      onBlur={[MockFunction]}
      onChange={[Function]}
      onFocus={[MockFunction]}
      options={
        Array [
          Object {
            "label": "option 1",
            "value": 1,
          },
          Object {
            "label": "option 2",
            "value": 2,
          },
        ]
      }
      placeholder=""
      searchable={false}
      styles={
        Object {
          "container": [Function],
          "control": [Function],
          "dropdownIndicator": [Function],
          "indicatorSeparator": [Function],
          "input": [Function],
          "menu": [Function],
          "multiValue": [Function],
          "multiValueLabel": [Function],
          "multiValueRemove": [Function],
          "option": [Function],
          "placeholder": [Function],
          "singleValue": [Function],
        }
      }
      value={Array []}
      valueKey="value"
    />
    <HelpBlock
      bsClass="help-block"
    >
      Required
    </HelpBlock>
  </Col>
</FormGroup>
`;
