// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`React select component Should render correctly 1`] = `
<FormGroup
  bsClass="form-group"
  validationState={null}
>
  <Col
    bsClass="col"
    className="control-label"
    componentClass="label"
    xs={2}
  >
    test select
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={8}
  >
    <Select
      arrowRenderer={[Function]}
      autosize={true}
      backspaceRemoves={true}
      backspaceToRemoveMessage="Press backspace to remove {label}"
      className=" final-form-select"
      clearAllText="Clear all"
      clearRenderer={[Function]}
      clearValueText="Clear value"
      clearable={false}
      closeOnSelect={true}
      deleteRemoves={true}
      delimiter=","
      disabled={false}
      escapeClearsValue={true}
      filterOptions={[Function]}
      id="name"
      ignoreAccents={true}
      ignoreCase={true}
      inputProps={Object {}}
      isLoading={false}
      joinValues={false}
      label="test select"
      labelKey="label"
      matchPos="any"
      matchProp="any"
      menuBuffer={0}
      menuRenderer={[Function]}
      multi={false}
      name="name"
      noResultsText="No results found"
      onBlur={[MockFunction]}
      onBlurResetsInput={true}
      onChange={[Function]}
      onCloseResetsInput={true}
      onFocus={[MockFunction]}
      onSelectResetsInput={true}
      openOnClick={true}
      optionClassName="final-form-select-option"
      optionComponent={[Function]}
      options={
        Array [
          Object {
            "label": "option 1",
            "value": 1,
          },
          Object {
            "label": "option 2",
            "value": 2,
          },
        ]
      }
      pageSize={5}
      placeholder=""
      removeSelected={true}
      required={false}
      rtl={false}
      scrollMenuIntoView={true}
      searchable={false}
      simpleValue={false}
      tabSelectsValue={true}
      trimFilter={true}
      value=""
      valueComponent={[Function]}
      valueKey="value"
    />
  </Col>
</FormGroup>
`;

exports[`React select component Should render correctly in error state 1`] = `
<FormGroup
  bsClass="form-group"
  validationState="error"
>
  <Col
    bsClass="col"
    className="control-label"
    componentClass="label"
    xs={2}
  >
    test select
  </Col>
  <Col
    bsClass="col"
    componentClass="div"
    xs={8}
  >
    <Select
      arrowRenderer={[Function]}
      autosize={true}
      backspaceRemoves={true}
      backspaceToRemoveMessage="Press backspace to remove {label}"
      className=" final-form-select"
      clearAllText="Clear all"
      clearRenderer={[Function]}
      clearValueText="Clear value"
      clearable={false}
      closeOnSelect={true}
      deleteRemoves={true}
      delimiter=","
      disabled={false}
      escapeClearsValue={true}
      filterOptions={[Function]}
      id="name"
      ignoreAccents={true}
      ignoreCase={true}
      inputProps={Object {}}
      isLoading={false}
      joinValues={false}
      label="test select"
      labelKey="label"
      matchPos="any"
      matchProp="any"
      menuBuffer={0}
      menuRenderer={[Function]}
      multi={false}
      name="name"
      noResultsText="No results found"
      onBlur={[MockFunction]}
      onBlurResetsInput={true}
      onChange={[Function]}
      onCloseResetsInput={true}
      onFocus={[MockFunction]}
      onSelectResetsInput={true}
      openOnClick={true}
      optionClassName="final-form-select-option"
      optionComponent={[Function]}
      options={
        Array [
          Object {
            "label": "option 1",
            "value": 1,
          },
          Object {
            "label": "option 2",
            "value": 2,
          },
        ]
      }
      pageSize={5}
      placeholder=""
      removeSelected={true}
      required={false}
      rtl={false}
      scrollMenuIntoView={true}
      searchable={false}
      simpleValue={false}
      tabSelectsValue={true}
      trimFilter={true}
      value=""
      valueComponent={[Function]}
      valueKey="value"
    />
    <HelpBlock
      bsClass="help-block"
    >
      Required
    </HelpBlock>
  </Col>
</FormGroup>
`;
